<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.2.2
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>hybrid-分享 - By 王兵兵</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    <link rel="stylesheet" media="print" href="./css/pdf.css">
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>hybrid-分享</h1>
<p><small>演讲者:王兵兵</small></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>个人见解,仅供参考</h1>
<blockquote>
<p>里面很多观点可能与个人工作经历有关,</p>
<p>可能只代表部分情况下的个人见解,</p>
<p>有问题还请大家指正.</p>
</blockquote>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>移动端-大趋势</h1>
<ul>
<li>手机</li>
<li>平板</li>
<li>可穿戴设备(Watch,Glass)</li>
<li>etc</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>APP开发模式</h1>
<blockquote>
<p>根据移动端的特性,出现了很多不同的开发模式.</p>
</blockquote>
<ul class="rollIn">
<li>Native---&gt;Android,IOS,WP</li>
<li>WebApp</li>
<li>Hybrid---&gt;phonegap,weixin-JSAPI,Lizard</li>
<li>React-Native</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>各种开发模式的优缺点</h1>
<p>开发模式之间各有优劣.</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Native的优势与缺陷</h1>
<div class="subSlide"><article>
<h2>优势</h2>
<ul class="rollIn">
<li>人机交互用户体验(原生组件)</li>
<li>绝对的性能优势</li>
<li>功能实现更全面(通知栏,服务等)</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h2>缺陷</h2>
<ul class="rollIn">
<li>开发成本高,发布周期远远跟不上产品节奏</li>
<li>平台差异需要开发多套代码</li>
<li>灵活性差,模块化不起来</li>
<li>发布麻烦(审批)</li>
<li>更新困难,需用户主动</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>WebApp的优势与缺陷</h1>
<div class="subSlide"><article>
<h2>优势</h2>
<ul class="rollIn">
<li>适用范围广</li>
<li>开发成本低</li>
<li>发布部署方便</li>
<li>无需手动更新,实时最新展示</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h2>缺陷</h2>
<ul class="rollIn">
<li>体验差</li>
<li>性能差</li>
<li>需要互联网</li>
<li>功能限制</li>
</ul>

</article></div>
<div class="subSlide"><hgroup>
<h2>单页应用(SPA)</h2>
<ul>
<li>SPA优势:用户体验好&amp;降低服务器压力</li>
<li>SPA缺点:SEO支持不好&amp;内存消耗大&amp;技术门槛相对较高</li>
</ul>

</hgroup><article>


</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Hybird</h1>
<blockquote>
<p>Hybird混合了Native以及Web的优势和缺陷,折中的方式.</p>
<p>而且目前Hybrid使用面已经很广:腾讯,阿里,京东,携程等.</p>
</blockquote>
<div class="subSlide"><article>
<h2>优势</h2>
<ul class="rollIn">
<li>所有webapp的优势</li>
<li>可使用本地代码解决资源下载慢,互联网必要等限制</li>
<li>可以调用Native的功能</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h2>缺陷</h2>
<ul class="rollIn">
<li>大多数功能实现都是使用web,还是存在性能瓶颈</li>
<li>多了一层HybridAPI,开发协调有困难</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>React-Native</h1>
<div class="subSlide"><article>
<p><img src="./imgs/react-native.jpg" alt="React-Native"></p>

</article></div>
<div class="subSlide"><article>
<h2>优势</h2>
<ul class="rollIn">
<li>Native的用户体验</li>
<li>React的开发效率</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h2>缺陷</h2>
<ul class="rollIn">
<li>依赖 React native 开发人员暴露的接口</li>
<li>初学成本</li>
<li>安卓版10月份出世</li>
<li>目前不完善</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>携程Lizard框架的实现</h1>
<div class="subSlide"><article>
<h3>框架选用</h3>
<ul>
<li>requireJS (模块加载)</li>
<li>Backbone View部分 (MVC:M&amp;C重写)</li>
<li>zepto (DOM)</li>
<li>underscore (工具库)</li>
<li>bridge.js (桥接)</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>桥接方式</h3>
<ul class="rollIn">
<li>confirm</li>
<li>URL Schemes(主流)</li>
<li>etc</li>
</ul>

</article></div>
<div class="subSlide"><article>
<p><img src="./imgs/process1.jpg" alt="流程图1"></p>

</article></div>
<div class="subSlide"><article>
<h3>URL Schemes</h3>
<ul class="rollIn">
<li>ctrip://wireless 打开携程App</li>
<li>weixin:// 打开微信</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>Native调用JS</h3>
<ul class="rollIn">
<li>native通过string调用js</li>
<li>webview调用js解释器的eval方法将string转化为js方法</li>
<li>webview调用js方法</li>
</ul>

</article></div>
<div class="subSlide"><article>
<h3>JS调用Native</h3>
<ul class="rollIn">
<li>javascript改变url，通过url传递调用的方法和参数</li>
<li>webview监听到了URL变化，并且探测到url中定义的方法和参数</li>
<li>寻找对应的映射表，找到native对应接口api进行调用</li>
<li>执行javascript调用方法时传入的回调string并添加数据</li>
<li>webview解析string转化为javascript进行调用</li>
</ul>

</article></div>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>结束,谢谢各位~</h1>

</article></section></slide>
        <!--slide class="slide thank-you-slide segue nobackground">
            <article class="flexbox vleft auto-fadein">
                <h2>Q &amp; A</h2>
                <h3>&lt;Thank You!&gt;</h3>
            </article>
        </slide-->
        <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
              <h2 style="color: white;">Powered By nodePPT v1.2.2</h2>
            </article>
          </slide>
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = location.pathname.split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'zoomin',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/hljs-0.8.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>

<!--placeholder-->
</body>
</html>
